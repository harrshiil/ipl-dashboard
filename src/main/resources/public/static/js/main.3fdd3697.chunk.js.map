{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeamName","team1","team2","otherTeamRoute","isMatchWon","matchWinner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","MatchSmallCard","TeamPage","useState","matchList","team","setTeam","useParams","useEffect","a","fetch","process","response","json","data","fetchMatches","title","value","totalMatches","totalWins","color","slice","map","id","YearSelector","years","i","push","year","MatchPage","matches","setMatches","TeamTile","HomePage","teams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fdd3697.chunk.js","sourcesContent":["import './MatchDetailCard.scss';\r\nimport { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const MatchDetailCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n    const otherTeamName = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeamName}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n        <div className={isMatchWon ? 'MatchDetailCard won-card' : 'MatchDetailCard lost-card'}>\r\n            <div>\r\n                <span className=\"vs\">vs</span>\r\n                <h1><Link to={otherTeamRoute}>{otherTeamName}</Link></h1>\r\n                <h2 className=\"match-date\">{match.date}</h2>\r\n                <h3 className=\"match-venue\">at {match.venue}</h3>\r\n                <h3 className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</h3>\r\n            </div>\r\n\r\n            <div className=\"additional-detail\">\r\n                <h3>First Innings</h3>\r\n                <p>{match.team1}</p>\r\n\r\n                <h3>Second Innings</h3>\r\n                <p>{match.team2}</p>\r\n\r\n                <h3>Man of the match</h3>\r\n                <p>{match.playerOfMatch}</p>\r\n\r\n                <h3>Umpires</h3>\r\n                <p>{match.umpire1}, {match.umpire1}</p>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}","import './MatchSmallCard.scss';\r\nimport { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const MatchSmallCard = ({ teamName, match }) => {\r\n    if (!match) return null;\r\n    const otherTeamName = match.team1 === teamName ? match.team2 : match.team1;\r\n    const otherTeamRoute = `/teams/${otherTeamName}`;\r\n    const isMatchWon = teamName === match.matchWinner;\r\n    return (\r\n        <div className={isMatchWon ? 'MatchSmallCard won-card' : 'MatchSmallCard lost-card'}>\r\n            <span className=\"vs\">vs</span>\r\n            <h3><Link to={otherTeamRoute}>{otherTeamName}</Link></h3>\r\n            <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n        </div>\r\n    );\r\n}","import './TeamPage.scss';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { MatchSmallCard } from '../components/MatchSmallCard';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\n\r\nexport const TeamPage = () => {\r\n\r\n    const [team, setTeam] = useState({ matchList: [] }); // teamObject will set by setTeam() method // initial init\r\n    const { teamName } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName] // empty array says that on which events it should call. empty array means on loan only\r\n    );\r\n\r\n    if (!team || !team.teamName) {\r\n        return <h1>Team not found </h1>\r\n    }\r\n\r\n    return (\r\n        <div className=\"TeamPage\">\r\n            <div className=\"team-name-section\"><h1 className=\"team-name\">{team.teamName}</h1></div>\r\n            <div className=\"win-loss-section\">\r\n                Win / Losses\r\n                <PieChart\r\n                    data={[\r\n                        { title: 'Losses', value: team.totalMatches - team.totalWins, color: '#a34d5d' },\r\n                        { title: 'Wins', value: team.totalWins, color: '#4da375' },\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"match-detail-section\">\r\n                <h3>Latest Matches</h3>\r\n                <MatchDetailCard teamName={team.teamName} match={team.matchList[0]} />\r\n            </div>\r\n\r\n            {team.matchList.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match} />)}\r\n            <div className=\"more-link\">\r\n                <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>\r\n                    More >\r\n                        </Link>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './YearSelector.scss';\r\nimport { React } from 'react';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const YearSelector = ({ teamName }) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n\r\n    for (let i = startYear; i <= endYear; i++) {\r\n        years.push(i);\r\n    }\r\n\r\n    return (\r\n        <ol className=\"YearSelector\">\r\n            {\r\n                years.map(year => (\r\n                    <li key={year}>\r\n                        <Link to={`/teams/${teamName}/matches/${year}`}>\r\n                            {year}\r\n                        </Link>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ol>\r\n    )\r\n}","import './MatchPage.scss';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { useParams } from 'react-router-dom';\r\nimport { YearSelector } from '../components/YearSelector';\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchMatches = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n                const data = await response.json();\r\n                setMatches(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName} />\r\n            </div>\r\n            <div>\r\n                <h1 className=\"page-heading\">{teamName} matches in {year}</h1>\r\n            {matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport './TeamTile.scss';\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const TeamTile = ({ teamName }) => {\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>{teamName}</Link>\r\n            </h1>\r\n        </div>\r\n    )\r\n}","import './HomePage.scss';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile';\r\n\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [teams, setTeam] = useState([]); // teamObject will set by setTeam() method // initial init\r\n\r\n    useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () => {\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n                const data = await response.json();\r\n                setTeam(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, [] // empty array says that on which events it should call. empty array means on loan only\r\n    );\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n            <div className=\"header-section\"><h1 className=\"app-name\">IPL Dashboard</h1></div>\r\n\r\n            <div className=\"team-grid\">\r\n                {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import './App.scss';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/teams/:teamName/matches/:year\">\n            <MatchPage />\n          </Route>\n          <Route path=\"/teams/:teamName\">\n            <TeamPage />\n          </Route>\n          <Route path=\"/\">\n            <HomePage />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}